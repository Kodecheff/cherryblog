{"version":3,"sources":["components/navbar.js","components/topnav.js","components/footer.js","categories/Home.js","categories/Food.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Topnav","currentMonth","date","Date","getMonth","month","day","getDate","year","getFullYear","getdate","Footer","type","placeholder","value","Home","Food","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11012ce6.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar() {\n  return(\n    <div>\n      <nav className=\"navbar\">\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li>General Health</li>\n          <li><Link to=\"/food\">Food</Link></li>\n          <li>Fitness</li>\n          <li>Lifestyle</li>\n          <li>More</li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\n\nfunction Topnav() {\n\n  function getdate() {\n    var currentMonth;\n    const date = new Date();\n\n    switch(date.getMonth()){\n      case 0:\n        currentMonth = \"January\";\n        break;\n      case 1:\n        currentMonth = \"February\";\n        break;\n      case 2:\n        currentMonth = \"March\";\n        break;\n      case 3:\n        currentMonth = \"April\";\n        break;\n      case 4:\n        currentMonth = \"May\";\n        break;\n      case 5:\n        currentMonth = \"June\"\n        break;\n      case 6:\n        currentMonth = \"July\"\n        break;\n      case 7:\n        currentMonth = \"August\"\n        break;\n      case 8:\n        currentMonth = \"September\"\n        break;\n      case 9:\n        currentMonth = \"October\"\n        break;\n      case 10:\n        currentMonth = \"November\"\n        break;\n      case 11:\n        currentMonth = \"December\"\n        break;\n      default:\n        currentMonth = \"\"\n    }\n    const month = currentMonth;\n    const day = date.getDate();\n    const year = date.getFullYear();\n\n    const fullDate = `${month} ${day}, ${year}`;\n\n    return fullDate;\n  }\n\n  return(\n    <div className=\"topnav\">\n      <div className=\"getdate float-left\">{getdate()}</div>\n\n      <nav className=\"float-right\">\n        <ul>\n          <li>Home</li>\n          <li>About us</li>\n          <li>Contact us</li>\n        </ul>\n      </nav>\n      <div className=\"clearfix\"></div>\n    </div>\n  )\n}\n\nexport default Topnav;","import React from 'react';\n\nfunction Footer() {\n  return(\n    <div className=\"footer\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4\">\n            <h4>About Us</h4>\n\n            <p>\n            Cherry Blog is a research-based health site that specializes in Science-Backed facts about \n            diseases and treatments, cost of surgeries, In Vitro Fertilization (IVF) and anatomy of the Human Body \n            with the aim of enlightening, educating, and informing the public. This site scientifically answers all \n            health questions and concerns of individuals and the public.\n            </p>\n          </div>\n\n          <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4\">\n            <h4>Site Links</h4>\n            <ul>\n              <li>Home</li>\n              <li>About Us</li>\n              <li>Contact Us</li>\n              <li>Share Story</li>\n            </ul>\n          </div>\n\n          <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4\">\n            <h4>SUBSCRIBE FOR UPDATES</h4>\n\n            <form>\n              <input type=\"text\" placeholder=\"Name\" />\n              <input type=\"email\" placeholder=\"Email\" />\n              <input type=\"submit\" value=\"Subscribe\" />\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <footer>\n        Copyright &copy; 2020 Cherry blog | Designed & Developed by Kodecheff\n      </footer>\n    </div>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport Navbar from '../components/navbar';\nimport Topnav from '../components/topnav';\nimport Footer from '../components/footer';\n\nfunction Home() {\n  return(\n    <div>\n      <Topnav />\n      <Navbar />\n\n      <div className=\"category lastest\">\n        <div className=\"container-fluid\">\n          <div className=\"ro\">\n            <h2>Latest</h2>\n\n            <div className=\"category-bg\">\n              <div className=\"headline\">\n                <span className=\"heading\">Meet your online vet</span>\n                <h4>Nigerians please learn to put your dog in a cage, it has\n                  its benefits - Vet\n                </h4>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"category editor\">\n        <div className=\"container-fluid\">\n          <h2>Editor's Pick</h2>\n\n          <div className=\"category-bg\">\n            <div className=\"headline\">\n              <h4>OPINION POLL - What is your most preferred food seasoning in Nigeria</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"category sexualhealth\">\n        <div className=\"container-fluid\">\n          <h2>Sexual Health</h2>\n\n          <div className=\"category-bg\">\n            <div className=\"headline\">\n              <span className=\"heading\">Sexual Health</span>\n              <h4>Here are some facts, curiosities and interesting information about your penis</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"category generalhealth\">\n        <div className=\"container-fluid\">\n          <h2>General Health</h2>\n\n          <div className=\"row\">\n              <div className=\"headline\"></div>\n              <div className=\"headline\"></div>\n              <div className=\"headline\"></div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\nimport Topnav from '../components/topnav';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\n\nfunction Food() {\n  return(\n    <div>\n      <Topnav />\n      <Navbar />\n      \n      <div className=\"foodPage\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-9 col-md-9 col-sm-9 col-xs-12\">\n              <h6>Food</h6>\n              <div className=\"row\">\n                <div className=\"foodHeadline\">\n\n                </div>\n                <div className=\"foodHeadline\">\n                  \n                </div>\n                <div className=\"foodHeadline\">\n                  \n                </div>\n                <div className=\"foodHeadline\">\n                  \n                </div>\n                <div className=\"foodHeadline\">\n                  \n                </div>\n                <div className=\"foodHeadline\">\n                  \n                </div>\n              </div>\n            </div>\n\n\n            <div className=\"col-lg-3 col-md-3 col-sm-3 col-xs-12\">\n              <h4>Latest Post</h4>\n\n              <div className=\"latestPost\">\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default Food;","import React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Home from './categories/Home';\nimport Food from './categories/Food';\nimport './App.css';\n\n\nfunction App() {\n  return(\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/food\" component={Food} />\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}